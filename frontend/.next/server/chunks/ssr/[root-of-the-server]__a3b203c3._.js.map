{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/contexts/app-router-context.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/contexts/hooks-client-context.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/contexts/server-inserted-html.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-server-dom-turbopack-client.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-dom.ts","turbopack:///[project]/node_modules/next/src/client/components/handle-isr-error.tsx","turbopack:///[project]/node_modules/next/src/client/components/builtin/global-error.tsx","turbopack:///[project]/frontend/src/lib/api.ts","turbopack:///[project]/frontend/src/app/services/property/page.tsx"],"sourcesContent":["module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].AppRouterContext\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].HooksClientContext\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].ServerInsertedHtml\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactServerDOMTurbopackClient\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactDOM\n","const workAsyncStorage =\n  typeof window === 'undefined'\n    ? (\n        require('../../server/app-render/work-async-storage.external') as typeof import('../../server/app-render/work-async-storage.external')\n      ).workAsyncStorage\n    : undefined\n\n// if we are revalidating we want to re-throw the error so the\n// function crashes so we can maintain our previous cache\n// instead of caching the error page\nexport function HandleISRError({ error }: { error: any }) {\n  if (workAsyncStorage) {\n    const store = workAsyncStorage.getStore()\n    if (store?.isRevalidate || store?.isStaticGeneration) {\n      console.error(error)\n      throw error\n    }\n  }\n\n  return null\n}\n","'use client'\n\nimport { HandleISRError } from '../handle-isr-error'\n\nconst styles = {\n  error: {\n    // https://github.com/sindresorhus/modern-normalize/blob/main/modern-normalize.css#L38-L52\n    fontFamily:\n      'system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"',\n    height: '100vh',\n    textAlign: 'center',\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  text: {\n    fontSize: '14px',\n    fontWeight: 400,\n    lineHeight: '28px',\n    margin: '0 8px',\n  },\n} as const\n\nexport type GlobalErrorComponent = React.ComponentType<{\n  error: any\n}>\nfunction DefaultGlobalError({ error }: { error: any }) {\n  const digest: string | undefined = error?.digest\n  return (\n    <html id=\"__next_error__\">\n      <head></head>\n      <body>\n        <HandleISRError error={error} />\n        <div style={styles.error}>\n          <div>\n            <h2 style={styles.text}>\n              Application error: a {digest ? 'server' : 'client'}-side exception\n              has occurred while loading {window.location.hostname} (see the{' '}\n              {digest ? 'server logs' : 'browser console'} for more\n              information).\n            </h2>\n            {digest ? <p style={styles.text}>{`Digest: ${digest}`}</p> : null}\n          </div>\n        </div>\n      </body>\n    </html>\n  )\n}\n\n// Exported so that the import signature in the loaders can be identical to user\n// supplied custom global error signatures.\nexport default DefaultGlobalError\n","// API client for making requests to the backend\r\nconst API_BASE_URL = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3002/api';\r\n\r\n// Get token from localStorage or sessionStorage\r\nconst getToken = () => {\r\n  if (typeof window !== 'undefined') {\r\n    return localStorage.getItem('token') || sessionStorage.getItem('token');\r\n  }\r\n  return null;\r\n};\r\n\r\n// Define types for API responses\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  userType: string;\r\n}\r\n\r\ninterface LoginResponse {\r\n  token: string;\r\n  user: User;\r\n}\r\n\r\ninterface RegisterResponse {\r\n  token: string;\r\n  user: User;\r\n}\r\n\r\n// Property & Land Services interfaces\r\ninterface PropertyTaxData {\r\n  propertyId: string;\r\n  ownerName: string;\r\n  village: string;\r\n  taxDue: number;\r\n  status: string;\r\n  createdAt: string;\r\n}\r\n\r\ninterface LandRecordData {\r\n  surveyNo: string;\r\n  owner: string;\r\n  area: string;\r\n  landType: string;\r\n  encumbranceStatus: string;\r\n  createdAt: string;\r\n}\r\n\r\ninterface MutationStatusData {\r\n  applicationId: string;\r\n  propertyId: string;\r\n  statusTimeline: {\r\n    step: string;\r\n    status: string;\r\n    date: string;\r\n  }[];\r\n  createdAt: string;\r\n}\r\n\r\n// Define a generic type for API responses\r\ntype ApiResponse<T = unknown> = Promise<T>;\r\n\r\n// Helper function to handle fetch errors\r\nconst handleFetchError = async (response: Response) => {\r\n  if (!response.ok) {\r\n    let errorMessage = `HTTP error! status: ${response.status}`;\r\n    try {\r\n      const errorData = await response.json();\r\n      errorMessage = errorData.message || errorMessage;\r\n    } catch (e) {\r\n      // If we can't parse JSON, use the status text\r\n      errorMessage = response.statusText || errorMessage;\r\n    }\r\n    throw new Error(errorMessage);\r\n  }\r\n  return response;\r\n};\r\n\r\nexport const apiClient = {\r\n  // Generic GET request\r\n  get: async <T = unknown>(endpoint: string): ApiResponse<T> => {\r\n    try {\r\n      const token = getToken();\r\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...(token && { 'Authorization': `Bearer ${token}` }),\r\n        },\r\n        // Add timeout and credentials for better error handling\r\n        credentials: 'include',\r\n      });\r\n      \r\n      await handleFetchError(response);\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API GET request failed:', error);\r\n      // Provide more specific error messages\r\n      if (error instanceof TypeError && error.message === 'Failed to fetch') {\r\n        throw new Error('Network error: Unable to connect to the server. Please check if the server is running.');\r\n      }\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Generic POST request\r\n  post: async <T = unknown>(endpoint: string, data: Record<string, unknown>): ApiResponse<T> => {\r\n    try {\r\n      const token = getToken();\r\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...(token && { 'Authorization': `Bearer ${token}` }),\r\n        },\r\n        body: JSON.stringify(data),\r\n        // Add timeout and credentials for better error handling\r\n        credentials: 'include',\r\n      });\r\n      \r\n      await handleFetchError(response);\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API POST request failed:', error);\r\n      // Provide more specific error messages\r\n      if (error instanceof TypeError && error.message === 'Failed to fetch') {\r\n        throw new Error('Network error: Unable to connect to the server. Please check if the server is running.');\r\n      }\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Generic PUT request\r\n  put: async <T = unknown>(endpoint: string, data: Record<string, unknown>): ApiResponse<T> => {\r\n    try {\r\n      const token = getToken();\r\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          ...(token && { 'Authorization': `Bearer ${token}` }),\r\n        },\r\n        body: JSON.stringify(data),\r\n        // Add timeout and credentials for better error handling\r\n        credentials: 'include',\r\n      });\r\n      \r\n      await handleFetchError(response);\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API PUT request failed:', error);\r\n      // Provide more specific error messages\r\n      if (error instanceof TypeError && error.message === 'Failed to fetch') {\r\n        throw new Error('Network error: Unable to connect to the server. Please check if the server is running.');\r\n      }\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Generic DELETE request\r\n  delete: async <T = unknown>(endpoint: string): ApiResponse<T> => {\r\n    try {\r\n      const token = getToken();\r\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n        method: 'DELETE',\r\n        headers: {\r\n          ...(token && { 'Authorization': `Bearer ${token}` }),\r\n        },\r\n        // Add timeout and credentials for better error handling\r\n        credentials: 'include',\r\n      });\r\n      \r\n      await handleFetchError(response);\r\n      return response.json();\r\n    } catch (error) {\r\n      console.error('API DELETE request failed:', error);\r\n      // Provide more specific error messages\r\n      if (error instanceof TypeError && error.message === 'Failed to fetch') {\r\n        throw new Error('Network error: Unable to connect to the server. Please check if the server is running.');\r\n      }\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // File download request\r\n  download: async (endpoint: string): Promise<Blob> => {\r\n    try {\r\n      const token = getToken();\r\n      const response = await fetch(`${API_BASE_URL}${endpoint}`, {\r\n        headers: {\r\n          ...(token && { 'Authorization': `Bearer ${token}` }),\r\n        },\r\n        // Add timeout and credentials for better error handling\r\n        credentials: 'include',\r\n      });\r\n      \r\n      await handleFetchError(response);\r\n      return response.blob();\r\n    } catch (error) {\r\n      console.error('API download request failed:', error);\r\n      // Provide more specific error messages\r\n      if (error instanceof TypeError && error.message === 'Failed to fetch') {\r\n        throw new Error('Network error: Unable to connect to the server. Please check if the server is running.');\r\n      }\r\n      throw error;\r\n    }\r\n  },\r\n\r\n  // Login method\r\n  login: async (email: string, password: string, userType: string): Promise<LoginResponse> => {\r\n    return apiClient.post<LoginResponse>('/auth/login', { email, password, userType });\r\n  },\r\n\r\n  // Register method\r\n  register: async (name: string, email: string, password: string): Promise<RegisterResponse> => {\r\n    return apiClient.post<RegisterResponse>('/auth/register', { name, email, password });\r\n  },\r\n\r\n  // Get current user\r\n  getCurrentUser: async (): Promise<User> => {\r\n    return apiClient.get<User>('/auth/user/me');\r\n  },\r\n\r\n  // Property & Land Services methods\r\n  getPropertyTax: async (propertyId: string, ownerName: string, village: string): Promise<PropertyTaxData> => {\r\n    return apiClient.post<PropertyTaxData>('/property-tax', { propertyId, ownerName, village });\r\n  },\r\n\r\n  downloadPropertyTaxReceipt: async (propertyId: string, format: 'pdf' | 'jpg' = 'pdf'): Promise<Blob> => {\r\n    return apiClient.download(`/property-tax/${propertyId}/download?format=${format}`);\r\n  },\r\n\r\n  // Updated land record methods to use the new on-demand endpoints\r\n  createLandRecord: async (data: { owner: string; surveyNo: string; area: string; landType: string; encumbranceStatus: string }): Promise<{ landRecordId: string }> => {\r\n    return apiClient.post<{ landRecordId: string }>('/landrecords', data);\r\n  },\r\n\r\n  getLandRecord: async (id: string): Promise<{ landRecord: LandRecordData }> => {\r\n    return apiClient.get<{ landRecord: LandRecordData }>(`/landrecords/${id}`);\r\n  },\r\n\r\n  downloadLandRecord: async (id: string, format: 'pdf' | 'jpg' = 'pdf'): Promise<Blob> => {\r\n    const endpoint = format === 'pdf' ? `/landrecords/${id}/certificate/pdf` : `/landrecords/${id}/certificate/jpg`;\r\n    return apiClient.download(endpoint);\r\n  },\r\n\r\n  getMutationStatus: async (applicationId: string): Promise<MutationStatusData> => {\r\n    return apiClient.post<MutationStatusData>('/mutation-status', { applicationId });\r\n  },\r\n\r\n  downloadMutationAcknowledgement: async (applicationId: string, format: 'pdf' | 'jpg' = 'pdf'): Promise<Blob> => {\r\n    return apiClient.download(`/mutation-status/${applicationId}/download?format=${format}`);\r\n  }\r\n};","'use client';\r\n\r\nimport React, { useState } from 'react';\r\nimport Navbar from '../../../components/Navbar';\r\nimport Footer from '../../../components/Footer';\r\nimport { apiClient } from '../../../lib/api';\r\n\r\ninterface PropertyTaxData {\r\n  propertyId: string;\r\n  ownerName: string;\r\n  village: string;\r\n  taxDue: number;\r\n  status: string;\r\n  createdAt: string;\r\n}\r\n\r\ninterface LandRecordData {\r\n  surveyNo: string;\r\n  owner: string;\r\n  area: string;\r\n  landType: string;\r\n  encumbranceStatus: string;\r\n  createdAt: string;\r\n  _id?: string;\r\n}\r\n\r\ninterface MutationStatusData {\r\n  applicationId: string;\r\n  propertyId: string;\r\n  statusTimeline: {\r\n    step: string;\r\n    status: string;\r\n    date: string;\r\n  }[];\r\n  createdAt: string;\r\n}\r\n\r\nconst PropertyLandServices = () => {\r\n  // State for property tax\r\n  const [propertyId, setPropertyId] = useState('');\r\n  const [ownerName, setOwnerName] = useState('');\r\n  const [village, setVillage] = useState('');\r\n  const [propertyTaxData, setPropertyTaxData] = useState<PropertyTaxData | null>(null);\r\n  const [isPropertyTaxLoading, setIsPropertyTaxLoading] = useState(false);\r\n\r\n  // State for land records\r\n  const [surveyNo, setSurveyNo] = useState('');\r\n  const [landRecordData, setLandRecordData] = useState<LandRecordData | null>(null);\r\n  const [landRecordId, setLandRecordId] = useState<string | null>(null);\r\n  const [isLandRecordLoading, setIsLandRecordLoading] = useState(false);\r\n\r\n  // State for mutation status\r\n  const [applicationId, setApplicationId] = useState('');\r\n  const [mutationStatusData, setMutationStatusData] = useState<MutationStatusData | null>(null);\r\n  const [isMutationStatusLoading, setIsMutationStatusLoading] = useState(false);\r\n\r\n  // State for preview modal\r\n  const [previewData, setPreviewData] = useState<any>(null);\r\n  const [previewType, setPreviewType] = useState<'propertyTax' | 'landRecord' | 'mutationStatus' | null>(null);\r\n  const [isPreviewOpen, setIsPreviewOpen] = useState(false);\r\n\r\n  // Handle property tax submission\r\n  const handlePropertyTaxSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsPropertyTaxLoading(true);\r\n    \r\n    try {\r\n      const response = await apiClient.getPropertyTax(propertyId, ownerName, village);\r\n      setPropertyTaxData(response);\r\n    } catch (error) {\r\n      console.error('Error fetching property tax data:', error);\r\n      alert('Error fetching property tax data. Please try again.');\r\n    } finally {\r\n      setIsPropertyTaxLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle land record submission\r\n  const handleLandRecordSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsLandRecordLoading(true);\r\n    \r\n    try {\r\n      // Create the land record first\r\n      const createResponse = await apiClient.createLandRecord({\r\n        owner: 'Land Owner', // This would typically come from form inputs\r\n        surveyNo,\r\n        area: '1 Acre', // This would typically come from form inputs\r\n        landType: 'Agricultural', // This would typically come from form inputs\r\n        encumbranceStatus: 'Nil' // This would typically come from form inputs\r\n      });\r\n      \r\n      // Get the created land record\r\n      const getResponse = await apiClient.getLandRecord(createResponse.landRecordId);\r\n      setLandRecordData(getResponse.landRecord);\r\n      setLandRecordId(createResponse.landRecordId);\r\n    } catch (error) {\r\n      console.error('Error fetching land record:', error);\r\n      alert('Error fetching land record. Please try again.');\r\n    } finally {\r\n      setIsLandRecordLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle mutation status submission\r\n  const handleMutationStatusSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    setIsMutationStatusLoading(true);\r\n    \r\n    try {\r\n      const response = await apiClient.getMutationStatus(applicationId);\r\n      setMutationStatusData(response);\r\n    } catch (error) {\r\n      console.error('Error fetching mutation status:', error);\r\n      alert('Error fetching mutation status. Please try again.');\r\n    } finally {\r\n      setIsMutationStatusLoading(false);\r\n    }\r\n  };\r\n\r\n  // Generate receipt for property tax\r\n  const generatePropertyTaxReceipt = async (format: 'pdf' | 'jpg') => {\r\n    if (!propertyTaxData) return;\r\n    \r\n    try {\r\n      const blob = await apiClient.downloadPropertyTaxReceipt(propertyTaxData.propertyId, format);\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `property-tax-receipt.${format}`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      window.URL.revokeObjectURL(url);\r\n    } catch (error) {\r\n      console.error(`Error downloading property tax receipt (${format}):`, error);\r\n      alert(`Error downloading property tax receipt. Please try again.`);\r\n    }\r\n  };\r\n\r\n  // Download land record\r\n  const downloadLandRecord = async (format: 'pdf' | 'jpg') => {\r\n    if (!landRecordId) return;\r\n    \r\n    try {\r\n      const blob = await apiClient.downloadLandRecord(landRecordId, format);\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `land-record-extract.${format}`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      window.URL.revokeObjectURL(url);\r\n    } catch (error) {\r\n      console.error(`Error downloading land record (${format}):`, error);\r\n      alert(`Error downloading land record. Please try again.`);\r\n    }\r\n  };\r\n\r\n  // Download mutation acknowledgement\r\n  const downloadMutationAcknowledgement = async (format: 'pdf' | 'jpg') => {\r\n    if (!mutationStatusData) return;\r\n    \r\n    try {\r\n      const blob = await apiClient.downloadMutationAcknowledgement(mutationStatusData.applicationId, format);\r\n      const url = window.URL.createObjectURL(blob);\r\n      const a = document.createElement('a');\r\n      a.href = url;\r\n      a.download = `mutation-status.${format}`;\r\n      document.body.appendChild(a);\r\n      a.click();\r\n      document.body.removeChild(a);\r\n      window.URL.revokeObjectURL(url);\r\n    } catch (error) {\r\n      console.error(`Error downloading mutation acknowledgement (${format}):`, error);\r\n      alert(`Error downloading mutation acknowledgement. Please try again.`);\r\n    }\r\n  };\r\n\r\n  // Open preview modal\r\n  const openPreview = (data: any, type: 'propertyTax' | 'landRecord' | 'mutationStatus') => {\r\n    setPreviewData(data);\r\n    setPreviewType(type);\r\n    setIsPreviewOpen(true);\r\n  };\r\n\r\n  // Close preview modal\r\n  const closePreview = () => {\r\n    setIsPreviewOpen(false);\r\n    setPreviewData(null);\r\n    setPreviewType(null);\r\n  };\r\n\r\n  // Villages data for dropdown\r\n  const villages = [\r\n    'Village A',\r\n    'Village B',\r\n    'Village C',\r\n    'Village D',\r\n    'Village E'\r\n  ];\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col bg-off-white\">\r\n      <Navbar />\r\n      \r\n      <main className=\"flex-grow\">\r\n        {/* Hero Section */}\r\n        <div className=\"bg-gradient-hero py-16 sm:py-20\">\r\n          <div className=\"responsive-container text-center\">\r\n            <h1 className=\"text-3xl sm:text-4xl md:text-5xl font-bold text-gray-800 mb-4\">\r\n              Property & Land Services\r\n            </h1>\r\n            <p className=\"text-lg sm:text-xl text-gray-600 max-w-2xl mx-auto\">\r\n              Manage your property and land records efficiently with our digital services.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Services Grid */}\r\n        <div className=\"responsive-container py-12 sm:py-16\">\r\n          <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-8\">\r\n            {/* Pay Property Tax Card */}\r\n            <div className=\"bg-white shadow-md rounded-2xl p-6 hover:shadow-xl transition-all duration-300 border border-gray-100\">\r\n              <div className=\"text-5xl text-center mb-4\" aria-hidden=\"true\">🏠</div>\r\n              <h3 className=\"text-xl font-semibold text-gray-800 mb-2 text-center\">\r\n                Pay Property Tax\r\n              </h3>\r\n              <p className=\"text-gray-600 mb-4 text-center\">\r\n                View and generate property tax receipts.\r\n              </p>\r\n              \r\n              <form onSubmit={handlePropertyTaxSubmit} className=\"space-y-4\">\r\n                <div>\r\n                  <label htmlFor=\"propertyId\" className=\"block text-sm font-medium text-dark-label mb-1\">\r\n                    Property ID / Holding Number\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"propertyId\"\r\n                    value={propertyId}\r\n                    onChange={(e) => setPropertyId(e.target.value)}\r\n                    className=\"input-field w-full\"\r\n                    placeholder=\"Enter Property ID or Holding Number\"\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label htmlFor=\"ownerName\" className=\"block text-sm font-medium text-dark-label mb-1\">\r\n                    Owner Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"ownerName\"\r\n                    value={ownerName}\r\n                    onChange={(e) => setOwnerName(e.target.value)}\r\n                    className=\"input-field w-full\"\r\n                    placeholder=\"Enter Owner Name\"\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label htmlFor=\"village\" className=\"block text-sm font-medium text-dark-label mb-1\">\r\n                    Village/Ward\r\n                  </label>\r\n                  <select\r\n                    id=\"village\"\r\n                    value={village}\r\n                    onChange={(e) => setVillage(e.target.value)}\r\n                    className=\"select-field w-full\"\r\n                    required\r\n                  >\r\n                    <option value=\"\">Select Village/Ward</option>\r\n                    {villages.map((village, index) => (\r\n                      <option key={index} value={village}>{village}</option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n                \r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isPropertyTaxLoading}\r\n                  className=\"w-full bg-gradient-to-r from-emerald-green to-deep-blue text-white py-3 rounded-xl shadow-soft hover:shadow-md transition-all font-medium focus:outline-none focus:ring-2 focus:ring-emerald-500 disabled:opacity-50\"\r\n                >\r\n                  {isPropertyTaxLoading ? 'Processing...' : 'View Tax Details'}\r\n                </button>\r\n              </form>\r\n              \r\n              {propertyTaxData && (\r\n                <div className=\"mt-6 p-4 bg-emerald-50 rounded-xl border border-emerald-200\">\r\n                  <h4 className=\"font-semibold text-gray-800 mb-2\">Tax Details</h4>\r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-600\">Property ID:</span>\r\n                      <span className=\"font-medium\">{propertyTaxData.propertyId}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-600\">Owner:</span>\r\n                      <span className=\"font-medium\">{propertyTaxData.ownerName}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-600\">Village:</span>\r\n                      <span className=\"font-medium\">{propertyTaxData.village}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-600\">Tax Due:</span>\r\n                      <span className=\"font-medium text-emerald-600\">₹0 (Digital E-Panchayat – No Fees)</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between\">\r\n                      <span className=\"text-gray-600\">Status:</span>\r\n                      <span className=\"font-medium\">{propertyTaxData.status}</span>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"mt-4\">\r\n                    <button\r\n                      onClick={() => generatePropertyTaxReceipt('pdf')}\r\n                      className=\"w-full bg-emerald-600 text-white py-2 rounded-lg hover:bg-emerald-700 transition-colors\"\r\n                    >\r\n                      Download PDF\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* View Land Records Card */}\r\n            <div className=\"bg-white shadow-md rounded-2xl p-6 hover:shadow-xl transition-all duration-300 border border-gray-100\">\r\n              <div className=\"text-5xl text-center mb-4\" aria-hidden=\"true\">📋</div>\r\n              <h3 className=\"text-xl font-semibold text-gray-800 mb-2 text-center\">\r\n                View Land Records\r\n              </h3>\r\n              <p className=\"text-gray-600 mb-4 text-center\">\r\n                Access detailed land records and extract documents.\r\n              </p>\r\n              \r\n              <form onSubmit={handleLandRecordSubmit} className=\"space-y-4\">\r\n                <div>\r\n                  <label htmlFor=\"surveyNo\" className=\"block text-sm font-medium text-dark-label mb-1\">\r\n                    Survey No. / Property ID\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"surveyNo\"\r\n                    value={surveyNo}\r\n                    onChange={(e) => setSurveyNo(e.target.value)}\r\n                    className=\"input-field w-full\"\r\n                    placeholder=\"Enter Survey Number or Property ID\"\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isLandRecordLoading}\r\n                  className=\"w-full bg-gradient-to-r from-emerald-green to-deep-blue text-white py-3 rounded-xl shadow-soft hover:shadow-md transition-all font-medium focus:outline-none focus:ring-2 focus:ring-emerald-500 disabled:opacity-50\"\r\n                >\r\n                  {isLandRecordLoading ? 'Fetching Records...' : 'View Land Records'}\r\n                </button>\r\n              </form>\r\n              \r\n              {landRecordData && (\r\n                <div className=\"mt-6\">\r\n                  <h4 className=\"font-semibold text-gray-800 mb-3\">Land Record Details</h4>\r\n                  <div className=\"overflow-x-auto\">\r\n                    <table className=\"min-w-full divide-y divide-gray-200\">\r\n                      <tbody className=\"bg-white divide-y divide-gray-200\">\r\n                        <tr>\r\n                          <td className=\"px-4 py-2 text-sm font-medium text-gray-700\">Owner</td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-600\">{landRecordData.owner}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td className=\"px-4 py-2 text-sm font-medium text-gray-700\">Survey No.</td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-600\">{landRecordData.surveyNo}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td className=\"px-4 py-2 text-sm font-medium text-gray-700\">Area</td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-600\">{landRecordData.area}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td className=\"px-4 py-2 text-sm font-medium text-gray-700\">Land Type</td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-600\">{landRecordData.landType}</td>\r\n                        </tr>\r\n                        <tr>\r\n                          <td className=\"px-4 py-2 text-sm font-medium text-gray-700\">Encumbrance Status</td>\r\n                          <td className=\"px-4 py-2 text-sm text-gray-600\">{landRecordData.encumbranceStatus}</td>\r\n                        </tr>\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                  \r\n                  <div className=\"mt-4\">\r\n                    <button\r\n                      onClick={() => downloadLandRecord('pdf')}\r\n                      className=\"w-full bg-emerald-600 text-white py-2 rounded-lg hover:bg-emerald-700 transition-colors\"\r\n                    >\r\n                      Download PDF\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n            \r\n            {/* Mutation Status Card */}\r\n            <div className=\"bg-white shadow-md rounded-2xl p-6 hover:shadow-xl transition-all duration-300 border border-gray-100\">\r\n              <div className=\"text-5xl text-center mb-4\" aria-hidden=\"true\">🔄</div>\r\n              <h3 className=\"text-xl font-semibold text-gray-800 mb-2 text-center\">\r\n                Mutation Status\r\n              </h3>\r\n              <p className=\"text-gray-600 mb-4 text-center\">\r\n                Track your land mutation application status.\r\n              </p>\r\n              \r\n              <form onSubmit={handleMutationStatusSubmit} className=\"space-y-4\">\r\n                <div>\r\n                  <label htmlFor=\"applicationId\" className=\"block text-sm font-medium text-dark-label mb-1\">\r\n                    Application ID\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    id=\"applicationId\"\r\n                    value={applicationId}\r\n                    onChange={(e) => setApplicationId(e.target.value)}\r\n                    className=\"input-field w-full\"\r\n                    placeholder=\"Enter Application ID\"\r\n                    required\r\n                  />\r\n                </div>\r\n                \r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isMutationStatusLoading}\r\n                  className=\"w-full bg-gradient-to-r from-emerald-green to-deep-blue text-white py-3 rounded-xl shadow-soft hover:shadow-md transition-all font-medium focus:outline-none focus:ring-2 focus:ring-emerald-500 disabled:opacity-50\"\r\n                >\r\n                  {isMutationStatusLoading ? 'Checking Status...' : 'Check Status'}\r\n                </button>\r\n              </form>\r\n              \r\n              {mutationStatusData && (\r\n                <div className=\"mt-6\">\r\n                  <h4 className=\"font-semibold text-gray-800 mb-3\">Application Status</h4>\r\n                  <div className=\"space-y-4\">\r\n                    {mutationStatusData.statusTimeline.map((step, index) => (\r\n                      <div key={index} className=\"flex items-start\">\r\n                        <div className={`flex-shrink-0 w-8 h-8 rounded-full flex items-center justify-center ${\r\n                          step.status === 'Completed' ? 'bg-emerald-500' : \r\n                          step.status === 'In Progress' ? 'bg-blue-500' : 'bg-gray-300'\r\n                        }`}>\r\n                          <span className=\"text-white text-xs font-bold\">\r\n                            {index + 1}\r\n                          </span>\r\n                        </div>\r\n                        <div className=\"ml-3 flex-1\">\r\n                          <div className=\"flex justify-between\">\r\n                            <h5 className=\"text-sm font-medium text-gray-800\">{step.step}</h5>\r\n                            <span className={`text-xs px-2 py-1 rounded-full ${\r\n                              step.status === 'Completed' ? 'bg-emerald-100 text-emerald-800' : \r\n                              step.status === 'In Progress' ? 'bg-blue-100 text-blue-800' : 'bg-gray-100 text-gray-800'\r\n                            }`}>\r\n                              {step.status}\r\n                            </span>\r\n                          </div>\r\n                          <p className=\"text-xs text-gray-500 mt-1\">{new Date(step.date).toLocaleDateString()}</p>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                  \r\n                  <div className=\"mt-4\">\r\n                    <button\r\n                      onClick={() => downloadMutationAcknowledgement('pdf')}\r\n                      className=\"w-full bg-emerald-600 text-white py-2 rounded-lg hover:bg-emerald-700 transition-colors\"\r\n                    >\r\n                      Download PDF\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </main>\r\n      \r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropertyLandServices;"],"names":["module","exports","require","vendored","AppRouterContext","HooksClientContext","ServerInsertedHtml","ReactServerDOMTurbopackClient","ReactDOM","HandleISRError","workAsyncStorage","window","undefined","error","store","getStore","isRevalidate","isStaticGeneration","console","styles","fontFamily","height","textAlign","display","flexDirection","alignItems","justifyContent","text","fontSize","fontWeight","lineHeight","margin","DefaultGlobalError","digest","html","id","head","body","div","style","h2","location","hostname","p"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6]}