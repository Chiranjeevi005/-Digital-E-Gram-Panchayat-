{"version":3,"sources":["turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/module.compiled.js","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react-jsx-runtime.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/app-page/vendored/ssr/react.ts","turbopack:///[project]/frontend/src/components/ToastContainer.tsx","turbopack:///[project]/frontend/src/components/Toast.tsx"],"sourcesContent":["if (process.env.NEXT_RUNTIME === 'edge') {\n  module.exports = require('next/dist/server/route-modules/app-page/module.js')\n} else {\n  if (process.env.__NEXT_EXPERIMENTAL_REACT) {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo-experimental.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page-experimental.runtime.prod.js')\n      }\n    }\n  } else {\n    if (process.env.NODE_ENV === 'development') {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.dev.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.dev.js')\n      }\n    } else {\n      if (process.env.TURBOPACK) {\n        module.exports = require('next/dist/compiled/next-server/app-page-turbo.runtime.prod.js')\n      } else {\n        module.exports = require('next/dist/compiled/next-server/app-page.runtime.prod.js')\n      }\n    }\n  }\n}\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.ReactJsxRuntime\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['react-ssr']!.React\n","'use client';\r\n\r\nimport React, { createContext, useContext, useState } from 'react';\r\nimport Toast from './Toast';\r\n\r\ntype ToastType = 'success' | 'error' | 'warning' | 'info';\r\n\r\ninterface ToastMessage {\r\n  id: string;\r\n  message: string;\r\n  type: ToastType;\r\n  duration?: number;\r\n}\r\n\r\ninterface ToastContextType {\r\n  showToast: (message: string, type: ToastType, duration?: number) => void;\r\n}\r\n\r\nconst ToastContext = createContext<ToastContextType | undefined>(undefined);\r\n\r\nexport const useToast = () => {\r\n  const context = useContext(ToastContext);\r\n  if (!context) {\r\n    throw new Error('useToast must be used within a ToastProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const ToastProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n  const [toasts, setToasts] = useState<ToastMessage[]>([]);\r\n\r\n  const showToast = (message: string, type: ToastType, duration?: number) => {\r\n    const id = Math.random().toString(36).substr(2, 9);\r\n    const newToast: ToastMessage = {\r\n      id,\r\n      message,\r\n      type,\r\n      duration\r\n    };\r\n    \r\n    setToasts(prev => [...prev, newToast]);\r\n  };\r\n\r\n  const removeToast = (id: string) => {\r\n    setToasts(prev => prev.filter(toast => toast.id !== id));\r\n  };\r\n\r\n  return (\r\n    <ToastContext.Provider value={{ showToast }}>\r\n      {children}\r\n      <div className=\"toast-container fixed top-4 right-4 z-50 space-y-2\">\r\n        {toasts.map(toast => (\r\n          <Toast\r\n            key={toast.id}\r\n            message={toast.message}\r\n            type={toast.type}\r\n            duration={toast.duration}\r\n            onClose={() => removeToast(toast.id)}\r\n          />\r\n        ))}\r\n      </div>\r\n    </ToastContext.Provider>\r\n  );\r\n};","'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\n\r\ninterface ToastProps {\r\n  message: string;\r\n  type: 'success' | 'error' | 'warning' | 'info';\r\n  onClose: () => void;\r\n  duration?: number;\r\n}\r\n\r\nconst Toast: React.FC<ToastProps> = ({ message, type, onClose, duration = 5000 }) => {\r\n  const [isVisible, setIsVisible] = useState(false);\r\n\r\n  useEffect(() => {\r\n    // Trigger entrance animation\r\n    setIsVisible(true);\r\n    \r\n    // Auto close after duration\r\n    const timer = setTimeout(() => {\r\n      handleClose();\r\n    }, duration);\r\n\r\n    return () => clearTimeout(timer);\r\n  }, [duration]);\r\n\r\n  const handleClose = () => {\r\n    setIsVisible(false);\r\n    // Wait for animation to complete before calling onClose\r\n    setTimeout(onClose, 300);\r\n  };\r\n\r\n  const getTypeStyles = () => {\r\n    switch (type) {\r\n      case 'success':\r\n        return 'bg-emerald-500 text-white';\r\n      case 'error':\r\n        return 'bg-red-500 text-white';\r\n      case 'warning':\r\n        return 'bg-amber-500 text-white';\r\n      case 'info':\r\n        return 'bg-blue-500 text-white';\r\n      default:\r\n        return 'bg-gray-500 text-white';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div \r\n      className={`toast ${isVisible ? 'show' : ''} ${getTypeStyles()} flex items-center p-4 rounded-lg shadow-lg max-w-md`}\r\n      role=\"alert\"\r\n      aria-live=\"assertive\"\r\n    >\r\n      <div className=\"flex-1 text-sm font-medium\">{message}</div>\r\n      <button \r\n        onClick={handleClose}\r\n        className=\"ml-4 text-white hover:text-gray-200 focus:outline-none focus:ring-2 focus:ring-white rounded-full p-1\"\r\n        aria-label=\"Close notification\"\r\n      >\r\n        <svg className=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n        </svg>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toast;"],"names":["process","env","NEXT_RUNTIME","module","exports","require","__NEXT_EXPERIMENTAL_REACT","NODE_ENV","TURBOPACK","vendored","ReactJsxRuntime","React"],"mappings":"0NA0BQG,EAAOC,OAAO,CAAGC,EAAQ,CAAA,CAAA,IAAA,iCC1BjCF,EAAOC,OAAO,CACZC,EAAQ,CAAA,CAAA,IAAA,GACRI,QAAQ,CAAC,YAAY,CAAEC,eAAe,+BCFxCP,EAAOC,OAAO,CACZC,EAAQ,CAAA,CAAA,IAAA,GACRI,QAAQ,CAAC,YAAY,CAAEE,KAAK,4FCA9B,EAAA,EAAA,CAAA,CAAA,aCSoC,CAAC,SAAE,CAAO,MAAE,CAAI,SAAE,CAAO,GAwD9C,OAxDgD,EAAW,GAAI,CAAE,IAC9E,GAAM,CAAC,EAAW,EAAa,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,GAAC,GAE3C,CAAA,EAAA,EAAA,SAAA,AAAS,EAAC,KAER,GAAa,GAGb,IAAM,EAAQ,WAAW,KACvB,GACF,EAAG,GAEH,MAAO,IAAM,aAAa,EAC5B,EAAG,CAAC,EAAS,EAEb,IAAM,EAAc,KAClB,GAAa,GAEb,WAAW,EAAS,IACtB,EAiBA,MACE,CAAA,EAAA,EAAA,IAAA,EAAC,MAAA,CACC,UAAW,CAAC,MAAM,EAAE,EAAY,OAAS,GAAG,CAAC,EAAE,CAjB7B,KACpB,OAAQ,GACN,IAAK,UACH,MAAO,2BACT,KAAK,QACH,MAAO,uBACT,KAAK,UACH,MAAO,yBACT,KAAK,OACH,MAAO,wBACT,SACE,MAAO,wBACX,EACF,IAImE,oDAAoD,CAAC,CACpH,KAAK,QACL,YAAU,sBAEV,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,sCAA8B,IAC7C,CAAA,EAAA,EAAA,GAAA,EAAC,SAAA,CACC,QAAS,EACT,UAAU,wGACV,aAAW,8BAEX,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,UAAU,KAAK,OAAO,OAAO,eAAe,QAAQ,qBACjE,CAAA,EAAA,EAAA,GAAA,EAAC,OAAA,CAAK,cAAc,QAAQ,eAAe,QAAQ,YAAa,EAAG,EAAE,+BAK/E,ED/CM,EAAe,CAAA,EAAA,EAAA,aAAA,AAAa,OAA+B,GAEpD,EAAW,KACtB,IAAM,EAAU,CAAA,EAAA,EAAA,UAAA,AAAU,EAAC,GAC3B,GAAI,CAAC,EACH,MAAM,AAAI,CADE,KACI,gDAElB,OAAO,CACT,EAEa,EAAyD,CAAC,UAAE,CAAQ,CAAE,IACjF,GAAM,CAAC,EAAQ,EAAU,CAAG,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAiB,EAAE,EAkBvD,MACE,CAAA,EAAA,EAAA,IAAA,EAAC,EAAa,QAAQ,CAAA,CAAC,MAAO,CAAE,UAjBhB,CAAC,EAAiB,EAAiB,KAEnD,IAAM,EAAyB,CAC7B,GAFS,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,MAAM,CAAC,EAAG,WAG9C,OACA,WACA,CACF,EAEA,EAAU,GAAQ,IAAI,EAAM,EAAS,CACvC,CAO4C,YACvC,EACD,CAAA,EAAA,EAAA,GAAA,EAAC,MAAA,CAAI,UAAU,8DACZ,EAAO,GAAG,CAAC,GACV,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,CAEC,QAAS,EAAM,OAAO,CACtB,KAAM,EAAM,IAAI,CAChB,SAAU,EAAM,QAAQ,CACxB,QAAS,IAAM,cAdJ,EAcgB,EAAM,EAAE,MAb3C,EAAU,GAAQ,EAAK,MAAM,CAAC,GAAS,EAAM,EAAE,GAAK,MASvC,EAAM,EAAE,OAUzB","ignoreList":[0,1,2]}