{"version":3,"sources":["turbopack:///[project]/frontend/src/app/services/certificates/apply/page.tsx"],"sourcesContent":["'use client';\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useRouter } from 'next/navigation';\r\nimport Navbar from '../../../../components/Navbar';\r\nimport Footer from '../../../../components/Footer';\r\nimport { apiClient } from '../../../../lib/api';\r\nimport { useToast } from '../../../../components/ToastContainer';\r\n\r\ninterface ApplyResponse {\r\n  success: boolean;\r\n  applicationId?: string;\r\n  message?: string;\r\n  status?: string;\r\n  downloadUrl?: string;\r\n}\r\n\r\ninterface User {\r\n  id: string;\r\n  name: string;\r\n  email: string;\r\n  userType: string;\r\n}\r\n\r\nconst CertificateApplication = () => {\r\n  const router = useRouter();\r\n  const { showToast } = useToast();\r\n  const [formData, setFormData] = useState({\r\n    certificateType: '',\r\n    applicantName: '',\r\n    fatherName: '',\r\n    motherName: '',\r\n    date: '',\r\n    place: '',\r\n    supportingFiles: [] as File[],\r\n    declaration: false\r\n  });\r\n  \r\n  const [errors, setErrors] = useState<Record<string, string>>({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  const [applicationResult, setApplicationResult] = useState<ApplyResponse | null>(null);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [user, setUser] = useState<User | null>(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [authError, setAuthError] = useState<string | null>(null);\r\n  // New state for submission progress\r\n  const [submissionProgress, setSubmissionProgress] = useState(0);\r\n  const [submissionStatus, setSubmissionStatus] = useState('');\r\n\r\n  // Get user data from authentication\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        setAuthError(null);\r\n        const userData = await apiClient.getCurrentUser();\r\n        const user: User = {\r\n          id: userData.id || '',\r\n          name: userData.name || '',\r\n          email: userData.email || '',\r\n          userType: userData.userType || 'Citizen'\r\n        };\r\n        setUser(user);\r\n        setFormData(prev => ({\r\n          ...prev,\r\n          applicantName: user.name || ''\r\n        }));\r\n      } catch (error: unknown) {\r\n        console.error('Error fetching user data:', error);\r\n        const errorMessage = error instanceof Error ? error.message : 'Failed to authenticate user. Please login again.';\r\n        setAuthError(errorMessage);\r\n        // Redirect to login if not authenticated\r\n        setTimeout(() => {\r\n          router.push('/login');\r\n        }, 3000);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    fetchUser();\r\n  }, [router]);\r\n\r\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {\r\n    const { name, value, type } = e.target;\r\n    \r\n    if (type === 'checkbox') {\r\n      const checked = (e.target as HTMLInputElement).checked;\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [name]: checked\r\n      }));\r\n    } else {\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        [name]: value\r\n      }));\r\n      \r\n      // Clear error when user starts typing\r\n      if (errors[name]) {\r\n        setErrors(prev => {\r\n          const newErrors = { ...prev };\r\n          delete newErrors[name];\r\n          return newErrors;\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files) {\r\n      const files = Array.from(e.target.files);\r\n      // Limit to 3 files\r\n      if (files.length > 3) {\r\n        setErrors(prev => ({\r\n          ...prev,\r\n          supportingFiles: 'You can upload maximum 3 files'\r\n        }));\r\n        return;\r\n      }\r\n      \r\n      // Validate file types\r\n      const validTypes = ['image/jpeg', 'image/png', 'application/pdf'];\r\n      const invalidFiles = files.filter(file => !validTypes.includes(file.type));\r\n      \r\n      if (invalidFiles.length > 0) {\r\n        setErrors(prev => ({\r\n          ...prev,\r\n          supportingFiles: 'Only JPG, PNG, and PDF files are allowed'\r\n        }));\r\n        return;\r\n      }\r\n      \r\n      setFormData(prev => ({\r\n        ...prev,\r\n        supportingFiles: files\r\n      }));\r\n      \r\n      // Clear error if files are valid\r\n      if (errors.supportingFiles) {\r\n        setErrors(prev => {\r\n          const newErrors = { ...prev };\r\n          delete newErrors.supportingFiles;\r\n          return newErrors;\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors: Record<string, string> = {};\r\n    \r\n    if (!formData.certificateType) {\r\n      newErrors.certificateType = 'Please select a certificate type';\r\n    }\r\n    \r\n    if (!formData.applicantName.trim()) {\r\n      newErrors.applicantName = 'Applicant name is required';\r\n    }\r\n    \r\n    if (!formData.date) {\r\n      newErrors.date = 'Date is required';\r\n    }\r\n    \r\n    if (!formData.place.trim()) {\r\n      newErrors.place = 'Place is required';\r\n    }\r\n    \r\n    // Validate that place is a string\r\n    if (formData.place && typeof formData.place !== 'string') {\r\n      newErrors.place = 'Place must be a valid text';\r\n    }\r\n    \r\n    if (!formData.declaration) {\r\n      newErrors.declaration = 'You must declare that the information is correct';\r\n    }\r\n    \r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      showToast('Please fix the errors in the form', 'error');\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    setSubmissionProgress(0);\r\n    setSubmissionStatus('Validating your details...');\r\n    \r\n    try {\r\n      // Extended progress simulation for at least 10 seconds with mobile-friendly messages\r\n      const progressSteps = [\r\n        { progress: 10, status: 'Validating your details...' },\r\n        { progress: 20, status: 'Preparing your application...' },\r\n        { progress: 30, status: 'Checking document requirements...' },\r\n        { progress: 40, status: 'Sending to server...' },\r\n        { progress: 50, status: 'Processing your request...' },\r\n        { progress: 60, status: 'Verifying information...' },\r\n        { progress: 70, status: 'Generating certificate...' },\r\n        { progress: 80, status: 'Applying official seal...' },\r\n        { progress: 90, status: 'Finalizing document...' },\r\n        { progress: 100, status: 'Ready for preview!' }\r\n      ];\r\n      \r\n      for (let i = 0; i < progressSteps.length; i++) {\r\n        const { progress, status } = progressSteps[i];\r\n        setSubmissionProgress(progress);\r\n        setSubmissionStatus(status);\r\n        \r\n        // Wait for at least 10 seconds total (10000ms / 10 steps = 1000ms per step)\r\n        await new Promise(resolve => setTimeout(resolve, 1000));\r\n      }\r\n      \r\n      // Prepare form data for submission\r\n      const submissionData = {\r\n        applicantName: formData.applicantName,\r\n        fatherName: formData.fatherName,\r\n        motherName: formData.motherName,\r\n        certificateType: formData.certificateType,\r\n        date: formData.date,\r\n        place: formData.place,\r\n        supportingFiles: formData.supportingFiles.map(file => file.name),\r\n        declaration: formData.declaration\r\n      };\r\n      \r\n      // Send the form data to the backend\r\n      const response: ApplyResponse = await apiClient.post<ApplyResponse>('/certificates/apply', submissionData);\r\n      \r\n      if (response.success && response.applicationId) {\r\n        // Show success toast\r\n        showToast('Certificate application submitted successfully!', 'success');\r\n        \r\n        // Redirect to preview page with application ID after a short delay\r\n        setTimeout(() => {\r\n          router.push(`/services/certificates/preview?id=${response.applicationId}`);\r\n        }, 500);\r\n      } else {\r\n        setErrors({\r\n          submit: response.message || 'Failed to submit application. Please try again.'\r\n        });\r\n        setSubmissionProgress(0);\r\n        setSubmissionStatus('');\r\n        showToast(response.message || 'Failed to submit application. Please try again.', 'error');\r\n      }\r\n    } catch (error: unknown) {\r\n      console.error('Error submitting application:', error);\r\n      const errorMessage = error instanceof Error ? error.message : 'Failed to submit application. Please try again.';\r\n      setErrors({\r\n        submit: errorMessage\r\n      });\r\n      setSubmissionProgress(0);\r\n      setSubmissionStatus('');\r\n      showToast(errorMessage, 'error');\r\n    } finally {\r\n      // Don't setIsSubmitting(false) here as we want to show the redirect\r\n    }\r\n  };\r\n\r\n  const handleDownload = async (format: 'pdf' | 'jpg') => {\r\n    try {\r\n      if (!applicationResult?.applicationId) {\r\n        showToast('Application ID not found', 'error');\r\n        return;\r\n      }\r\n      \r\n      // Use the API client to download the file\r\n      const blob = await apiClient.download(`/certificates/${applicationResult.applicationId}/download?format=${format}`);\r\n      \r\n      // Create a download link\r\n      const url = window.URL.createObjectURL(blob);\r\n      const link = document.createElement('a');\r\n      link.href = url;\r\n      link.download = `${formData.certificateType.toLowerCase()}-certificate.${format}`;\r\n      document.body.appendChild(link);\r\n      link.click();\r\n      \r\n      // Clean up\r\n      document.body.removeChild(link);\r\n      window.URL.revokeObjectURL(url);\r\n      \r\n      // Show success toast\r\n      showToast(`Certificate downloaded as ${format.toUpperCase()} successfully!`, 'success');\r\n    } catch (error: unknown) {\r\n      console.error(`Error downloading ${format.toUpperCase()} certificate:`, error);\r\n      const errorMessage = error instanceof Error ? error.message : `Failed to download certificate in ${format.toUpperCase()} format. Please try again.`;\r\n      showToast(errorMessage, 'error');\r\n    }\r\n  };\r\n\r\n  // Show loading state while fetching user data\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"min-h-screen flex flex-col bg-off-white\">\r\n        <Navbar />\r\n        <main className=\"flex-grow responsive-container py-8 flex items-center justify-center\">\r\n          <div className=\"text-center\">\r\n            <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-emerald-600 mx-auto\"></div>\r\n            <p className=\"mt-4 text-gray-600\">Loading user data...</p>\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Show authentication error\r\n  if (authError) {\r\n    return (\r\n      <div className=\"min-h-screen flex flex-col bg-off-white\">\r\n        <Navbar />\r\n        <main className=\"flex-grow responsive-container py-8\">\r\n          <div className=\"max-w-2xl mx-auto bg-white rounded-2xl shadow-lg p-6 sm:p-8\">\r\n            <div className=\"text-center\">\r\n              <div className=\"w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                <svg className=\"w-8 h-8 text-red-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n                </svg>\r\n              </div>\r\n              <h1 className=\"text-2xl font-bold text-gray-800 mb-2\">Authentication Error</h1>\r\n              <p className=\"text-gray-600 mb-6\">{authError}</p>\r\n              <p className=\"text-gray-500 text-sm\">Redirecting to login page...</p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Redirect to login if user is not authenticated\r\n  if (!user) {\r\n    return null; // Will be redirected in the useEffect\r\n  }\r\n\r\n  if (applicationResult) {\r\n    return (\r\n      <div className=\"min-h-screen flex flex-col bg-off-white\">\r\n        <Navbar />\r\n        \r\n        <main className=\"flex-grow responsive-container py-8\">\r\n          <div className=\"max-w-2xl mx-auto\">\r\n            <div className=\"bg-white rounded-2xl shadow-lg p-6 sm:p-8 text-center animate-fade-in\">\r\n              <div className=\"w-16 h-16 bg-emerald-100 rounded-full flex items-center justify-center mx-auto mb-6\">\r\n                <svg className=\"w-8 h-8 text-emerald-600\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M5 13l4 4L19 7\" />\r\n                </svg>\r\n              </div>\r\n              \r\n              <h1 className=\"text-2xl font-bold text-gray-800 mb-2\">Application Submitted!</h1>\r\n              <p className=\"text-gray-600 mb-6\">\r\n                Your {formData.certificateType} certificate application has been processed successfully.\r\n              </p>\r\n              \r\n              <div className=\"bg-emerald-50 rounded-xl p-4 mb-6\">\r\n                <p className=\"text-emerald-800 font-medium\">\r\n                  Application ID: {applicationResult.applicationId}\r\n                </p>\r\n                <p className=\"text-emerald-700 mt-1\">\r\n                  Status: <span className=\"font-semibold\">{applicationResult.status}</span>\r\n                </p>\r\n              </div>\r\n              \r\n              <div className=\"mb-8\">\r\n                <h2 className=\"text-lg font-semibold text-gray-800 mb-4\">Download Your Certificate</h2>\r\n                <div className=\"flex flex-col sm:flex-row gap-4 justify-center\">\r\n                  <button\r\n                    onClick={() => handleDownload('pdf')}\r\n                    className=\"bg-gradient-to-r from-emerald-600 to-emerald-700 text-white px-6 py-3 rounded-xl shadow-soft hover:shadow-md transition-all font-medium flex items-center justify-center transform hover:scale-105 duration-300 focus:outline-none focus:ring-2 focus:ring-emerald-500\"\r\n                  >\r\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                    </svg>\r\n                    Download PDF\r\n                  </button>\r\n                  <button\r\n                    onClick={() => handleDownload('jpg')}\r\n                    className=\"bg-gradient-to-r from-sky-600 to-sky-700 text-white px-6 py-3 rounded-xl shadow-soft hover:shadow-md transition-all font-medium flex items-center justify-center transform hover:scale-105 duration-300 focus:outline-none focus:ring-2 focus:ring-sky-500\"\r\n                  >\r\n                    <svg className=\"w-5 h-5 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\r\n                    </svg>\r\n                    Download JPG\r\n                  </button>\r\n                </div>\r\n              </div>\r\n              \r\n              <button\r\n                onClick={() => {\r\n                  setApplicationResult(null);\r\n                  setFormData({\r\n                    certificateType: '',\r\n                    applicantName: user.name || '',\r\n                    fatherName: '',\r\n                    motherName: '',\r\n                    date: '',\r\n                    place: '',\r\n                    supportingFiles: [],\r\n                    declaration: false\r\n                  });\r\n                }}\r\n                className=\"text-emerald-600 hover:text-emerald-800 font-medium transform hover:scale-105 duration-300 focus:outline-none focus:ring-2 focus:ring-emerald-500 rounded-lg px-3 py-1\"\r\n              >\r\n                Apply for another certificate\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </main>\r\n        \r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Update the form submission section to show progress with mobile-friendly design\r\n  if (isSubmitting) {\r\n    return (\r\n      <div className=\"min-h-screen flex flex-col bg-off-white\">\r\n        <Navbar />\r\n        <main className=\"flex-grow responsive-container py-8 flex items-center justify-center\">\r\n          <div className=\"max-w-md w-full bg-white rounded-2xl shadow-lg p-6 animate-fade-in\">\r\n            <div className=\"mb-6 text-center\">\r\n              <div className=\"w-16 h-16 bg-emerald-100 rounded-full flex items-center justify-center mx-auto mb-4\">\r\n                <svg className=\"w-8 h-8 text-emerald-600 animate-spin\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n                  <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n                </svg>\r\n              </div>\r\n              <h2 className=\"text-2xl font-bold text-gray-800 mb-2\">Generating Your Certificate</h2>\r\n              <p className=\"text-gray-600\">{submissionStatus}</p>\r\n            </div>\r\n            \r\n            <div className=\"mb-4\">\r\n              <div className=\"w-full bg-gray-200 rounded-full h-2.5\">\r\n                <div \r\n                  className=\"bg-emerald-600 h-2.5 rounded-full transition-all duration-300 ease-in-out\" \r\n                  style={{ width: `${submissionProgress}%` }}\r\n                ></div>\r\n              </div>\r\n              <div className=\"flex justify-between text-sm text-gray-500 mt-2\">\r\n                <span>0%</span>\r\n                <span>{submissionProgress}%</span>\r\n                <span>100%</span>\r\n              </div>\r\n            </div>\r\n            \r\n            <div className=\"grid grid-cols-5 gap-1 mt-4\">\r\n              {[...Array(10)].map((_, index) => (\r\n                <div \r\n                  key={index} \r\n                  className={`h-1.5 rounded-full transition-all duration-300 ${\r\n                    submissionProgress >= (index + 1) * 10 ? 'bg-emerald-500' : 'bg-gray-200'\r\n                  }`}\r\n                ></div>\r\n              ))}\r\n            </div>\r\n            \r\n            <p className=\"text-sm text-gray-500 mt-4 text-center\">\r\n              {submissionStatus}\r\n            </p>\r\n          </div>\r\n        </main>\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen flex flex-col bg-off-white\">\r\n      <Navbar />\r\n      \r\n      <main className=\"flex-grow responsive-container py-8\">\r\n        <div className=\"max-w-2xl mx-auto\">\r\n          <div className=\"bg-white rounded-2xl shadow-lg p-4 sm:p-6 animate-fade-in form-container\">\r\n            <div className=\"text-center mb-6\">\r\n              <h1 className=\"text-2xl sm:text-3xl font-bold text-gray-800\">Apply for Certificate</h1>\r\n              <p className=\"text-gray-600 mt-2\">Fill in the details below to apply for your certificate</p>\r\n            </div>\r\n            \r\n            <form onSubmit={handleSubmit} className=\"space-y-5\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-dark-label mb-1\">\r\n                  Certificate Type *\r\n                </label>\r\n                <select\r\n                  name=\"certificateType\"\r\n                  value={formData.certificateType}\r\n                  onChange={handleInputChange}\r\n                  className={`w-full px-4 py-2.5 sm:py-3 rounded-xl border text-gray-800 transition-all duration-300 ${\r\n                    errors.certificateType ? 'border-red-500 shake' : 'border-gray-300 focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500'\r\n                  }`}\r\n                  aria-required=\"true\"\r\n                >\r\n                  <option value=\"\" className=\"text-gray-800\">Select Certificate Type</option>\r\n                  <option value=\"Birth\" className=\"text-gray-800\">Birth Certificate</option>\r\n                  <option value=\"Death\" className=\"text-gray-800\">Death Certificate</option>\r\n                </select>\r\n                {errors.certificateType && (\r\n                  <p className=\"mt-1 text-sm text-red-600 animate-shake\" role=\"alert\">{errors.certificateType}</p>\r\n                )}\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium text-dark-label mb-1\">\r\n                  Applicant Name *\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"applicantName\"\r\n                  value={formData.applicantName}\r\n                  onChange={handleInputChange}\r\n                  readOnly\r\n                  className=\"w-full px-4 py-2.5 sm:py-3 rounded-xl border border-gray-300 bg-gray-100 cursor-not-allowed text-gray-800\"\r\n                  placeholder=\"Your name\"\r\n                  aria-required=\"true\"\r\n                />\r\n                <p className=\"mt-1 text-xs text-gray-500\">Auto-filled from your profile</p>\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-dark-label mb-1\">\r\n                    Father&apos;s Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"fatherName\"\r\n                    value={formData.fatherName}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full px-4 py-2.5 sm:py-3 rounded-xl border border-gray-300 text-gray-800 transition-all duration-300 focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500\"\r\n                    placeholder=\"Enter father&apos;s name\"\r\n                  />\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-dark-label mb-1\">\r\n                    Mother&apos;s Name\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"motherName\"\r\n                    value={formData.motherName}\r\n                    onChange={handleInputChange}\r\n                    className=\"w-full px-4 py-2.5 sm:py-3 rounded-xl border border-gray-300 text-gray-800 transition-all duration-300 focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500\"\r\n                    placeholder=\"Enter mother&apos;s name\"\r\n                  />\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-dark-label mb-1\">\r\n                    Date *\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    value={formData.date}\r\n                    onChange={handleInputChange}\r\n                    className={`w-full px-4 py-2.5 sm:py-3 rounded-xl border text-gray-800 transition-all duration-300 ${\r\n                      errors.date ? 'border-red-500 shake' : 'border-gray-300 focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500'\r\n                    }`}\r\n                    aria-required=\"true\"\r\n                  />\r\n                  {errors.date && (\r\n                    <p className=\"mt-1 text-sm text-red-600 animate-shake\" role=\"alert\">{errors.date}</p>\r\n                  )}\r\n                </div>\r\n                \r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-dark-label mb-1\">\r\n                    Place *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"place\"\r\n                    value={formData.place}\r\n                    onChange={handleInputChange}\r\n                    className={`w-full px-4 py-2.5 sm:py-3 rounded-xl border text-gray-800 transition-all duration-300 ${\r\n                      errors.place ? 'border-red-500 shake' : 'border-gray-300 focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500'\r\n                    }`}\r\n                    placeholder=\"Enter place\"\r\n                    aria-required=\"true\"\r\n                  />\r\n                  {errors.place && (\r\n                    <p className=\"mt-1 text-sm text-red-600 animate-shake\" role=\"alert\">{errors.place}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              <div>\r\n                <label className=\"block text-sm font-medium text-dark-label mb-1\">\r\n                  Supporting Documents\r\n                </label>\r\n                <div className=\"mt-1 flex justify-center px-4 py-6 sm:py-8 border-2 border-gray-300 border-dashed rounded-xl transition-all duration-300 hover:border-emerald-500 hover:bg-emerald-50\">\r\n                  <div className=\"space-y-1 text-center\">\r\n                    <svg className=\"mx-auto h-8 w-8 sm:h-10 sm:w-10 text-gray-400\" stroke=\"currentColor\" fill=\"none\" viewBox=\"0 0 48 48\" aria-hidden=\"true\">\r\n                      <path d=\"M28 8H12a4 4 0 00-4 4v20m32-12v8m0 0v8a4 4 0 01-4 4H12a4 4 0 01-4-4v-4m32-4l-3.172-3.172a4 4 0 00-5.656 0L28 28M8 32l9.172-9.172a4 4 0 015.656 0L28 28m0 0l4 4m4-24h8m-4-4v8m-12 4h.02\" strokeWidth={2} strokeLinecap=\"round\" strokeLinejoin=\"round\" />\r\n                    </svg>\r\n                    <div className=\"flex flex-col sm:flex-row text-sm text-gray-600 mt-2\">\r\n                      <label className=\"relative cursor-pointer bg-white rounded-md font-medium text-emerald-600 hover:text-emerald-500 focus-within:outline-none\">\r\n                        <span>Upload files</span>\r\n                        <input\r\n                          type=\"file\"\r\n                          multiple\r\n                          accept=\".jpg,.jpeg,.png,.pdf\"\r\n                          onChange={handleFileChange}\r\n                          className=\"sr-only\"\r\n                          aria-label=\"Upload supporting documents\"\r\n                        />\r\n                      </label>\r\n                      <p className=\"sm:pl-1 mt-1 sm:mt-0\">or drag and drop</p>\r\n                    </div>\r\n                    <p className=\"text-xs text-gray-500 mt-1\">\r\n                      JPG, PNG, or PDF up to 3 files\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                {errors.supportingFiles && (\r\n                  <p className=\"mt-1 text-sm text-red-600 animate-shake\" role=\"alert\">{errors.supportingFiles}</p>\r\n                )}\r\n                {formData.supportingFiles.length > 0 && (\r\n                  <div className=\"mt-2\">\r\n                    <p className=\"text-sm text-gray-600\">Selected files:</p>\r\n                    <ul className=\"list-disc list-inside text-sm text-gray-600 mt-1\">\r\n                      {formData.supportingFiles.map((file, index) => (\r\n                        <li key={index} className=\"animate-fade-in truncate\">{file.name}</li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              \r\n              <div className=\"flex items-start\">\r\n                <div className=\"flex items-center h-5\">\r\n                  <input\r\n                    id=\"declaration\"\r\n                    name=\"declaration\"\r\n                    type=\"checkbox\"\r\n                    checked={formData.declaration}\r\n                    onChange={handleInputChange}\r\n                    className=\"focus:ring-emerald-500 h-4 w-4 text-emerald-600 border-gray-300 rounded transition-all duration-300\"\r\n                    aria-required=\"true\"\r\n                  />\r\n                </div>\r\n                <div className=\"ml-3 text-sm\">\r\n                  <label htmlFor=\"declaration\" className=\"font-medium text-gray-700\">\r\n                    I declare that the information provided is correct and complete *\r\n                  </label>\r\n                  {errors.declaration && (\r\n                    <p className=\"mt-1 text-sm text-red-600 animate-shake\" role=\"alert\">{errors.declaration}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n              \r\n              {errors.submit && (\r\n                <div className=\"rounded-md bg-red-50 p-3 animate-shake\" role=\"alert\">\r\n                  <div className=\"flex\">\r\n                    <div className=\"flex-shrink-0\">\r\n                      <svg className=\"h-5 w-5 text-red-400\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\r\n                        <path fillRule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clipRule=\"evenodd\" />\r\n                      </svg>\r\n                    </div>\r\n                    <div className=\"ml-3\">\r\n                      <h3 className=\"text-sm font-medium text-red-800\">{errors.submit}</h3>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n              \r\n              <div>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isSubmitting}\r\n                  className=\"w-full bg-gradient-to-r from-emerald-600 to-emerald-700 text-white py-2.5 sm:py-3 rounded-xl shadow-soft hover:shadow-md transition-all font-medium flex items-center justify-center disabled:opacity-70 transform hover:scale-105 duration-300 focus:outline-none focus:ring-2 focus:ring-emerald-500\"\r\n                  aria-busy={isSubmitting}\r\n                >\r\n                  {isSubmitting ? (\r\n                    <>\r\n                      <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\r\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\r\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\r\n                      </svg>\r\n                      Processing...\r\n                    </>\r\n                  ) : (\r\n                    'Generate Certificate'\r\n                  )}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </main>\r\n      \r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CertificateApplication;"],"names":[],"mappings":"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"}